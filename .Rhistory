q()
setRepositories()
utils:::menuInstallPkgs()
q()
q()
ver()
R.version()
R.Version()
R.PReference
R.Version()
setwd("C:\Github\RepData_PeerAssessment1")
setwd("C:/Github/RepData_PeerAssessment1")
setwd("activity")
setwd("C:\Github\RepData_PeerAssessment1")
setwd("C:/Github/RepData_PeerAssessment1")
setwd("activity")
AMD <- read.csv("activity.csv")
header(amd)
header(AMD)
Header(AMD)
Head(AMD)
AMD
names(AMD)
setwd("activity")
head(AMD)
setwd("C:/Github/RepData_PeerAssessment1")
setwd("activity")
AMD <- read.csv("activity.csv" , header = TRUE)
head(AMD)
amd <- read.csv("activity.csv" , header = TRUE)
head(amd)
nrows(amd)
nrow(amd)
summary
summary(amd)
class(amd$date)
class(amd)
class(amd$interval)
x <- as.date(amd$date)
amd$date[1:10]
as.Date(amd$date,"%y-%m-%d")
head(as.Date(amd$date,"%y-%m-%d")
)
factor(amd$date)
level(amd$date
)
levels(amd$date)
x <- as.Date(levels(amd$date),"%y-%m-%d")
x
x <- as.Date(levels(amd$date),"%yyyy-%mm-%dd")
x
x <- as.Date(levels(amd$date))
x
class(x)
levels(amd$date) <- as.Date(levels(amd$date))
amd$date
x <- amd$Date
class(x)
x <- amd$date
class(x)
x <- as.Date(amd$date)
class(x)
md$date <- as.Date(amd$date)
amd$date <- as.Date(amd$date)
class(amd)
class(amd$date)
names(amd)
class(and$interval)
class(amd$interval)
amd$interval
levels(amd$interval)
level(amd$interval)
amd$interval <- as.factor(amd$interval)
levels(amd$interval)
library("plyr", lib.loc="~/R/win-library/3.1")
summ <- ddply(amd, .(date), sumarrize , totalsteps = sum(steps))
summ <- ddply(amd, .(date), sumarrize , steps = sum(steps))
summ <- ddply(amd, .(date),steps = sum(steps))
head(summ)
summ <- ddply(amd, .(date),summarize,steps = sum(steps))
head(summ)
length(is.na(steps))
length(is.na(amd$steps))
length(amd$steps))
length(amd$steps)
length(is.na(amd[,1]))
length(amd[!is.na(amd),])
nrows(amd[!is.na(amd),])
nrow(amd[!is.na(amd),])
amd <- amd[!is.na(amd),]
summ <- ddply(amd, .(date),summarize,steps = sum(steps))
library("ggplot2", lib.loc="~/R/win-library/3.1")
q <-  qplot(date,steps, data = summ , geom = "histogram", xlab = "Date" , ylab = "Total Steps")
print q
print(q)
q <-  qplot(steps, data = summ , geom = "histogram", xlab = "Date" , ylab = "Total Steps")
print(q)
q <-  qplot(steps, data = summ , geom = "histogram", xlab = "Date" , ylab = "Steps" , main = "Total number of steps per day")
print(q)
q <-  qplot(steps, data = summ , geom = "histogram", xlab = "Date" , ylab = "Steps" , main = "Total number of steps per day" , binwidth = x)
print(q)
q <-  qplot(steps, data = summ , geom = "histogram", xlab = "Date" , ylab = "Steps" , main = "Total number of steps per day" , binwidth = .5)
print(q)
q <-  qplot(steps, data = summ , geom = "histogram", xlab = "Date" , ylab = "Steps" , main = "Total number of steps per day" , binwidth = 1)
q <-  qplot(steps, data = summ , geom = "histogram", xlab = "Date" , ylab = "Steps" , main = "Total number of steps per day")
q <-  qplot(steps, data = summ , geom = "histogram", xlab = "Date" , ylab = "Steps" , main = "Total number of steps per day" , binwidth = 1)
print(q)
q <-  qplot(steps, data = summ , geom = "histogram", xlab = "Date" , ylab = "Steps" , main = "Total number of steps per day" , binwidth = length(amd$date))
print(q)
q <-  qplot(steps, data = summ , geom = "histogram", xlab = "Date" , ylab = "Steps" , main = "Total number of steps per day" , binwidth = length(summ$date))
print(q)
q <-  qplot(steps, data = summ , geom = "histogram", xlab = "Date" , ylab = "Steps" , main = "Total number of steps per day")
print(q)
nrow(summ)
q + scale_x_continuos(labels = summ$date)
q + scale_x_continuous(labels = summ$date)
q + scale_x_continuous(breaks = c(5,10,15,20,25,30,35,40,45,50),labels = summ$date)
q + scale_x_continuous(breaks = c(5,10,15,20,25,30,35,40,45,50),labels = summ$date[5,10,15,20,25,30,35,40,45,50])
summ$date[5,10,15,20,25,30,35,40,45,50]
summ$date[5]
summ$date[5,10]
summ$date[c(5,10,15,20,25,30,35,40,45,50)]
q + scale_x_continuous(breaks = c(5,10,15,20,25,30,35,40,45,50),labels = summ$date[c(5,10,15,20,25,30,35,40,45,50)])
q <-  qplot(steps, data = summ , geom = "histogram", xlab = "Date" , ylab = "Steps" , main = "Total number of steps per day")
printq
print(q)
print(q)
q <-  qplot(steps, data = summ , geom = "histogram", xlab = "Daily Steps" , ylab = "Frequency" ,
main = "Total number of steps per day")
print(q)
q <-  qplot(steps, data = summ , geom = "histogram", xlab = "Daily Steps" , ylab = "Frequency" ,
main = "Total number of steps per day", geom_histogram(aes(fill = ..count..))),scale_fill_gradient("Count", low = "green", high = "red"))
q <-  qplot(steps, data = summ , geom = "histogram", xlab = "Daily Steps" , ylab = "Frequency" ,
main = "Total number of steps per day")
q+geom_histogram(aes(fill = ..count..)) +
scale_fill_gradient("Count", low = "green", high = "red")
q <-  qplot(steps, data = summ , geom = "histogram", xlab = "Daily Steps" , ylab = "Frequency" ,
main = "Total number of steps per day" , binwidth = 5)
q+geom_histogram(aes(fill = ..count..)) +
scale_fill_gradient("Count", low = "green", high = "red")
q <-  qplot(steps, data = summ , geom = "histogram", xlab = "Daily Steps" , ylab = "Frequency" ,
main = "Total number of steps per day" , binwidth = 10)
q+geom_histogram(aes(fill = ..count..)) +
scale_fill_gradient("Count", low = "green", high = "red")
q <-  qplot(steps, data = summ , geom = "histogram", xlab = "Daily Steps" , ylab = "Frequency" ,
main = "Total number of steps per day" , binwidth = 10 , geom_histogram(aes(fill = ..count..)), scale_fill_gradient("Count", low = "green", high = "red"))
print(q)
q <-  qplot(steps, data = summ , geom = "histogram", xlab = "Daily Steps" , ylab = "Frequency" ,
main = "Total number of steps per day" , binwidth = 10 , geom_histogram(aes(fill = ..count..)))
print(q)
q <-  qplot(steps, data = summ , geom = "histogram", xlab = "Daily Steps" , ylab = "Frequency" ,
main = "Total number of steps per day" , binwidth = 10 , aes(fill = ..count..))
print(q)
q <-  qplot(steps, data = summ , geom = "histogram", xlab = "Daily Steps" , ylab = "Frequency" ,
main = "Total number of steps per day" , binwidth = 10 , fill = ..count..)
print(q)
q <-  qplot(steps, data = summ , geom = "histogram", xlab = "Daily Steps" , ylab = "Frequency" ,
main = "Total number of steps per day" , binwidth = 5 , fill = ..count..)
print(q)
q <-  qplot(steps, data = summ , geom = "histogram", xlab = "Daily Steps" , ylab = "Frequency" ,
main = "Total number of steps per day" , binwidth = 5 , fill = ..Frequency..)
print(q)
q <-  qplot(steps, data = summ , geom = "histogram", xlab = "Daily Steps" , ylab = "Frequency" ,
main = "Total number of steps per day" , binwidth = 5 , fill = ..count..)
q <-  qplot(steps, data = summ , geom = "histogram", xlab = "Daily Steps" , ylab = "Frequency" ,
main = "Total number of steps per day" , binwidth = 5 , fill = 0)
print(q)
q <-  qplot(steps, data = summ , geom = "histogram", xlab = "Daily Steps" , ylab = "Frequency" ,
main = "Total number of steps per day" , binwidth = 5 , fill = ..count..)
print(q)
getwd()
setwd("..")
getwd()
amd2 <- amd[!is.na(amd),]
summ <- ddply(amd2, .(date),summarize,steps = sum(steps))
q <-  qplot(steps, data=summ , geom = "histogram", xlab = "Daily Steps" ,
ylab = "Frequency" ,main = "Total number of steps per day" , binwidth = 5)
q <- q + geom_histogram(aes(fill = ..count..)) +
scale_fill_gradient("Count", low = "green", high = "red")
print(q)
meansteps <- mean(summ$steps)
medeansteps <- medean(summ$steps)
meansteps <- mean(summ$steps)
median(summ$steps)
mean(summ$steps)
summ$steps
amd2
summ
summ <- ddply(amd2, .(date),summarize,steps = sum(steps))
summ
is.na[amd2]
is.na(amd2)
amd[is.na(amd2)]
amd2
nrow(amd2)
nrow(amd)
anyNA(amd)
anyNA(amd2)
amd2 <- amd[!(is.na(amd$steps)|is.na(amd$date)|is.na(amd$interval)),]
nrow(amd)
anyNA(amd2)
nrow(amd2)
amd2 <- amd[!(is.na(amd$steps)|is.na(amd$date)),]
nrow(amd2)
summ <- ddply(amd2, .(date),summarize,steps = sum(steps))
summ
summ2 <- ddply(amd2, .(date),summarize,steps = sum(steps))
summ <- ddply(amd, .(date),summarize,steps = sum(steps))
histogram(summ)
library(qplot)
library(ggplot2)
hist(summ)
hist(summ$steps)
his(summ2$steps)
hist(summ$steps)
summ <- ddply(amd2, .(date),summarize,steps = sum(steps)
)
q <-  qplot(steps, data=summ , geom = "histogram", xlab = "Daily Steps" ,
ylab = "Frequency" ,main = "Total number of steps per day" , binwidth = 5)
q <- q + geom_histogram(aes(fill = ..count..)) +
scale_fill_gradient("Count", low = "green", high = "red")
print(q)
![alt text][logo]
[logo]: /PA1_template_files/figure-html/Total Daily Steps.png
![alt text](/PA1_template_files/figure-html/Total Daily Steps.png)
hist(summ$steps)
hist(summ$steps,break=5)
hist(summ$steps,xlab = "Daily Steps" ,
ylab = "Frequency" ,main = "Total Daily Steps")
hist(summ$steps,xlab = "Daily Steps" ,
ylab = "Frequency" ,main = "Total Daily Steps",density =1)
hist(summ$steps,xlab = "Daily Steps" ,
ylab = "Frequency" ,main = "Total Daily Steps",)
getwd()
getwd()
_cahe
cache
_cache
getwd()
C:/Github/RepData_PeerAssessment1/PA1_template_files/figure-html/Total%20Daily%20Steps.png
(amd2, .(interval),summarize,steps = average(steps))
summ <- ddply(amd2, .(interval),summarize,steps = average(steps))
summ <- ddply(amd2, .(interval),summarize,steps = mean(steps))
summ
qplot( interval,steps, summ, geom = c("point","line"),xlab = "Daily Time Interval",ylab ="Average steps", main= "Average Daily Activity Pattern")
qplot(interval,steps, summ, geom = c("point","line"),xlab = "Daily Time Interval",ylab ="Average steps", main= "Average Daily Activity Pattern")
names(summ)
qplot(interval,steps, data = summ, geom = c("point","line"),xlab = "Daily Time Interval",ylab ="Average steps", main= "Average Daily Activity Pattern")
chk <- summ$steps == max(summ$steps)
summ[chk,1]
max(summ$steps)
chk
summ[chk]
summ[chk,]
summ[chk,1]
chk <- summ$steps == max(summ$steps)
summ[chk,]
nrow(amd)
setwd("activity")
amd <- read.csv("activity.csv" , header = TRUE)
setwd("..")
nrow(amd)
sum(is.na(amd$steps))
sum(is.na(amd$date))
sum(is.na(amd$interva;))
sum(is.na(amd$interval))
sum(is.na(amd$steps)|is.na(amd$date)|is.na(amd$interval))
17568-2304
nrow(amd2)
sum(is.na(amd$interval))
lookup<- ddply(amd2, .(interval),summarize,steps = mean(steps))
merge(lookup,amd,by = 'inetrval')
chk <- lookup$interval = 25
chk <- lookup$interval == 25
lookup[chk]
lookup[chk,]
lookup[chk,1]
lookup[chk,2]
lookup[lookup$interval == 25,2]
impute <- function(x as numeric) return lookup[lookup$interval == x,2]
impute <- function(x) return lookup[lookup$interval == x,2]
impute <- function(x as numeric){
library(plyr)
lookup<- ddply(amd2, .(interval),summarize,steps = mean(steps))
return lookup[lookup$interval == x,2]
}
amd
lookup
merge(amd,lookup,by=interval)
merge(amd,lookup,by= "interval")
lookup
for (i in 1:nrow(amd))
if (is.na(amd[i,1]))
amd[i,1] = lookup[lookup$interval == amd[i,3],2)
weekdays.Date(amd$date)
amd$date
weekdays(amd$date)
weekdays.Date(amd$date)
weekdays()
weekdays(sys.time)
weekdays(sys.time())
julian(amd[2,1])
amd[2,2]
amd[1,2]
levels(amd$date) <- as.Date(levels(amd$date))
amd$date <- as.Date(amd$date)
weekdays(amd[1,2])
weekdays(amd[,2])
summ <- ddply(newamd,.(date),summarize,steps = sum(steps))
summ <- ddply(summ, .(weekdays(date)),summarize = mean(steps))
summ <- ddply(amd2,.(date),summarize,steps = sum(steps))
summ <- ddply(newamd,.(date),summarize,steps = sum(steps))
summ <- ddply(summ, .(weekdays(date)),summarize = mean(steps))
summ <- ddply(amd2,.(date),summarize,steps = sum(steps))
summ <- ddply(summ, .(weekdays(date)),summarize = mean(steps))
summ
summ <- ddply(amd2,.(date),summarize,c(steps = sum(steps),day= weekday(date)))
summ <- ddply(amd2,.(date),summarize,c(steps = sum(steps),day= weekdays(date)))
summ
head(summ)
summ <- ddply(amd2,.(date,weekdays(date)),summarize,steps = sum(steps))
head(summ)
summ <- ddply(summ, .(weekdays(date)),summarize = mean(steps))
summ
summ <- ddply(amd2,.(date,days = weekdays(date)),summarize,steps = sum(steps))
summ <- ddply(amd2,.(date,days = as.character(weekdays(date))),summarize,steps = sum(steps))
head(summ)
summ <- ddply(summ, .(days),summarize = mean(steps))
summ
summ <- ddply(amd2,.(date,days = as.character(weekdays(date))),summarize,steps = sum(steps))
summ <- ddply(summ, .(days),summarize,steps = mean(steps))
summ
summ <- ddply(amd2,.(date,days = weekdays(date)),summarize,steps = sum(steps))
summ <- ddply(summ, .(days),summarize,steps = mean(steps))
summ
summ$days <- as.Date(summ$days)
summ <- ddply(amd2,.(date,days = as.character(weekdays(date))),summarize,steps = sum(steps))
summ <- ddply(summ, .(days),summarize,c(steps = mean(steps),date = min(date))
)
summ
summ <- ddply(amd2,.(date,days = as.character(weekdays(date))),summarize,steps = sum(steps))
summ <- ddply(amd2,.(date,days = as.character(weekdays(date))),summarize,steps = sum(steps))
summ <- ddply(amd2,.(date,days = weekdays(date)),summarize,steps = sum(steps))
summ
class[summ,2]
class(summ$days
)
summ$day <- factor(summ$day, levels= c("Sunday", "Monday",
"Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
)
summ <- ddply(summ, .(days),summarize,steps = mean(steps))
summ
class(summ$days)
summ$day <- factor(summ$day, levels= c("Sunday", "Monday",
+                                         "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
summ$day <- factor(summ$day, levels= c("Sunday", "Monday",
"Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
summ
summ[order(summ$days)]
summ <- ddply(amd2,.(date,days = rweekdays(date)),summarize,steps = sum(steps))
summ <- ddply(summ, .(days),summarize,steps = mean(steps))
summ <- ddply(amd,.(date,days = rweekdays(date)),summarize,steps = sum(steps))
summ <- ddply(summ, .(days),summarize,steps = mean(steps))
amd
summ <- ddply(amd,.(date,days = weekdays(date)),summarize,steps = sum(steps))
summ <- ddply(summ, .(days),summarize,steps = mean(steps))
summ
summ <- ddply(amd2,.(date,days = weekdays(date)),summarize,steps = sum(steps))
summ <- ddply(summ, .(days),summarize,steps = mean(steps))
summ
summ$days <- as.factor(summ$days,levels= c("Sunday", "Monday","Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
summ$days <- as.factor(summ$days,levels= 1:7,labels = c("Sunday", "Monday","Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
dow < - dataframe(1:7,c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
dow < - dataframe(1:7,c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday")
)
dow <- NULL
dow < - dataframe(1:7,c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday")
)
dow < - data.frame(1:7,c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday")
)
x <- data.frame( 1:7 ,c("Sunday", "Monday","Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
x
x <- data.frame( num =1:7 ,dow = c("Sunday", "Monday","Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
summ
x <- data.frame( num =1:7 ,days = c("Sunday", "Monday","Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
x
merge(x,summ)
order(summ$num)
class(summ$num)
y <- merge(x,summ)
order(y$num)
y[order(y$num),]
24*4
24*!2
24*12
x <- data.frame( days = c("Sunday", "Monday","Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"), define = c("weekend", "weekday", "weekday", "weekday", "weekday", "weekday","weekebd" ) )
x
x <- data.frame( days = c("Sunday", "Monday","Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"), define = c("weekend", "weekday", "weekday", "weekday", "weekday", "weekday","weekend" ) )
x
x$define <- as.factor(x$define)
x
summx
summary(s)
x
summary(x)
class(x$define)
x
x <- data.frame( days = c("Sunday", "Monday","Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"), define = c("weekend", "weekday", "weekday", "weekday", "weekday", "weekday","weekend" ) )
x$define <- as.factor(x$define)
